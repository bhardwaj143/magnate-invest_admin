{"ast":null,"code":"import axios from \"axios\";\nimport * as constants from \"./constants/appConstants\";\nimport * as url from \"./constants/urlConstants\";\nimport ToggleNotification from \"./component/ReusableComponents/Toggle Notifications/ToggleNotification\";\nvar instance = axios.create({\n  // baseURL: \"http://5fc1f26f427d.ngrok.io/QuotaGames/api/auth\",\n  baseURL: \"https://keshavi.dmlabs.in\" // headers: {\n  //   Authorization: localStorage.getItem('keshavi-token') ? `Bearer ${localStorage.getItem('keshavi-token')}` : null,\n  //   \"Content-Type\": \"application/json\",\n  //   accept: \"application/json\",\n  //   \"Access-Control-Allow-Origin\": \"*\",\n  // },\n\n});\n\nvar requestHandler = function requestHandler(request) {\n  request.headers[\"Authorization\"] = \"\".concat(constants.token);\n  return request;\n};\n\nvar forgetHandlerOne = function forgetHandlerOne(request) {\n  request.headers[\"Authorization\"] = \"\".concat(localStorage.getItem(\"keshavi-forgot-token-1\"));\n  return request;\n};\n\nvar forgetHandlerTwo = function forgetHandlerTwo(request) {\n  request.headers[\"Authorization\"] = \"\".concat(localStorage.getItem(\"keshavi-forgot-token-2\"));\n  return request;\n};\n\ninstance.interceptors.request.use(function (request) {\n  if (request.url === url.forgetPasswordOtp) {\n    forgetHandlerOne(request);\n  } else if (request.url === url.resetForgetPassword) {\n    forgetHandlerTwo(request);\n  } else {\n    requestHandler(request);\n  }\n\n  return request;\n});\ninstance.interceptors.response.use(function (response) {\n  return response;\n}, function (err) {\n  var _err$response;\n\n  console.log(err && err.response && err.response.data ? err.response.data : null);\n\n  if (err && ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 500) {\n    return {\n      status: 500\n    };\n  }\n\n  if (err && err.response && (err.response.status === 401 || err.response.status === 403)) {\n    return unAutherized();\n  } else {\n    if (err && err.response && err.response.data) {\n      throw err;\n    } else {\n      throw {\n        response: {\n          status: 500\n        }\n      };\n    }\n  }\n});\n\nvar unAutherized = function unAutherized() {\n  if (localStorage.getItem(\"quota-games-token\")) {\n    localStorage.removeItem(\"quota-games-token\");\n    window.location.href = \"/login\";\n  }\n};\n\nexport default instance;","map":{"version":3,"sources":["/home/dml-sb/project/digi-react-admin/src/instance.js"],"names":["axios","constants","url","ToggleNotification","instance","create","baseURL","requestHandler","request","headers","token","forgetHandlerOne","localStorage","getItem","forgetHandlerTwo","interceptors","use","forgetPasswordOtp","resetForgetPassword","response","err","console","log","data","status","unAutherized","removeItem","window","location","href"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as constants from \"./constants/appConstants\";\nimport * as url from \"./constants/urlConstants\";\nimport ToggleNotification from \"./component/ReusableComponents/Toggle Notifications/ToggleNotification\";\n\nconst instance = axios.create({\n  // baseURL: \"http://5fc1f26f427d.ngrok.io/QuotaGames/api/auth\",\n  baseURL: \"https://keshavi.dmlabs.in\",\n  // headers: {\n  //   Authorization: localStorage.getItem('keshavi-token') ? `Bearer ${localStorage.getItem('keshavi-token')}` : null,\n  //   \"Content-Type\": \"application/json\",\n  //   accept: \"application/json\",\n  //   \"Access-Control-Allow-Origin\": \"*\",\n  // },\n});\n\nconst requestHandler = (request) => {\n  request.headers[\"Authorization\"] = `${constants.token}`;\n  return request;\n};\n\nconst forgetHandlerOne = (request) => {\n  request.headers[\"Authorization\"] = `${localStorage.getItem(\n    \"keshavi-forgot-token-1\"\n  )}`;\n  return request;\n};\n\nconst forgetHandlerTwo = (request) => {\n  request.headers[\"Authorization\"] = `${localStorage.getItem(\n    \"keshavi-forgot-token-2\"\n  )}`;\n  return request;\n};\n\ninstance.interceptors.request.use((request) => {\n  if (request.url === url.forgetPasswordOtp) {\n    forgetHandlerOne(request);\n  } else if (request.url === url.resetForgetPassword) {\n    forgetHandlerTwo(request);\n  } else {\n    requestHandler(request);\n  }\n  return request;\n});\n\ninstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (err) => {\n    console.log(\n      err && err.response && err.response.data ? err.response.data : null\n    );\n    if(err && err.response?.status === 500)\n    {\n      return { status: 500 };\n    }\n    if (\n      err &&\n      err.response &&\n      (err.response.status === 401 || err.response.status === 403)\n    ) {\n      return unAutherized();\n    } else {\n      if (err && err.response && err.response.data) {\n        throw err;\n      } else {\n        throw {response: { status: 500} };\n      }\n    }\n  }\n);\n\nconst unAutherized = () => {\n  if (localStorage.getItem(\"quota-games-token\")) {\n    localStorage.removeItem(\"quota-games-token\");\n    window.location.href = \"/login\";\n  }\n};\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}