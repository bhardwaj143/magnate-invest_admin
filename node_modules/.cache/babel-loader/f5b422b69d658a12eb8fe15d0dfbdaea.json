{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\magnate-invest_admin\\\\src\\\\component\\\\Authentication\\\\ForgotPassword\\\\forgotPassword.js\";\n\nimport React, { useState } from \"react\";\nimport \"./../../../assets/scss/style.scss\";\nimport Aux from \"../../../hoc/_Aux\";\nimport Breadcrumb from \"../../../App/layout/AdminLayout/Breadcrumb\";\nimport { connect } from \"react-redux\";\nimport \"./forgotPassword.css\";\nimport { forgetPasswordEmail, forgetPasswordOtp, resetForgetPassword } from \"../../../redux/actions/forgetPasswordAction\";\nimport EmailValidation from \"./emailValidation/EmailValidation\";\nimport OtpValidation from \"./otpValidation/otpValidation\";\nimport ResetValidation from \"./resetValidation/ResetValidation\";\nimport ToggleNotification from \"../../ReusableComponents/Toggle Notifications/ToggleNotification\"; // import { ModalHeader } from 'react-bootstrap';\n\nvar ForgotPassword = function ForgotPassword(props) {\n  var _useState = useState(\"email\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      render = _useState2[0],\n      setRender = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var renderFunction = function renderFunction(renderComponent) {\n    setRender(renderComponent);\n  };\n\n  var onSubmitHandlerEmail = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email) {\n      var obj, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              obj = {\n                email: email\n              };\n              _context.next = 3;\n              return props.emailVerification(obj);\n\n            case 3:\n              res = _context.sent;\n              console.log(res);\n\n              if (res && res.status && res.status === 200) {\n                renderFunction(\"otp\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmitHandlerEmail(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onSubmitHandlerOTP = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(otp) {\n      var obj, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              obj = {\n                otp: otp * 1\n              };\n              _context2.next = 3;\n              return props.otpVerification(obj);\n\n            case 3:\n              res = _context2.sent;\n\n              if (res && res.status && res.status === 200) {\n                renderFunction(\"resetPassword\");\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSubmitHandlerOTP(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onSubmitHandlerReset = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(password) {\n      var obj, res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              obj = {\n                password: password\n              };\n              _context3.next = 3;\n              return props.resetPassword(obj);\n\n            case 3:\n              res = _context3.sent;\n              return _context3.abrupt(\"return\", {\n                status: res.status\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onSubmitHandlerReset(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-bg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"r\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"r s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"r s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"r\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })), render === \"email\" ? /*#__PURE__*/React.createElement(EmailValidation, {\n    submitHandler: onSubmitHandlerEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }) : render === \"otp\" ? /*#__PURE__*/React.createElement(OtpValidation, {\n    submitHandler: onSubmitHandlerOTP,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }) : render === \"resetPassword\" && /*#__PURE__*/React.createElement(ResetValidation, {\n    submitHandler: onSubmitHandlerReset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }))));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    emailVerification: function emailVerification(data) {\n      return dispatch(forgetPasswordEmail(data));\n    },\n    otpVerification: function otpVerification(data) {\n      return dispatch(forgetPasswordOtp(data));\n    },\n    resetPassword: function resetPassword(data) {\n      return dispatch(resetForgetPassword(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ForgotPassword);","map":{"version":3,"sources":["C:/magnate-invest_admin/src/component/Authentication/ForgotPassword/forgotPassword.js"],"names":["React","useState","Aux","Breadcrumb","connect","forgetPasswordEmail","forgetPasswordOtp","resetForgetPassword","EmailValidation","OtpValidation","ResetValidation","ToggleNotification","ForgotPassword","props","render","setRender","email","setEmail","renderFunction","renderComponent","onSubmitHandlerEmail","obj","emailVerification","res","console","log","status","onSubmitHandlerOTP","otp","otpVerification","onSubmitHandlerReset","password","resetPassword","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./../../../assets/scss/style.scss\";\nimport Aux from \"../../../hoc/_Aux\";\nimport Breadcrumb from \"../../../App/layout/AdminLayout/Breadcrumb\";\nimport { connect } from \"react-redux\";\nimport \"./forgotPassword.css\";\nimport {\n  forgetPasswordEmail,\n  forgetPasswordOtp,\n  resetForgetPassword,\n} from \"../../../redux/actions/forgetPasswordAction\";\nimport EmailValidation from \"./emailValidation/EmailValidation\";\nimport OtpValidation from \"./otpValidation/otpValidation\";\nimport ResetValidation from \"./resetValidation/ResetValidation\";\nimport ToggleNotification from \"../../ReusableComponents/Toggle Notifications/ToggleNotification\";\n// import { ModalHeader } from 'react-bootstrap';\n\nconst ForgotPassword = (props) => {\n  const [render, setRender] = useState(\"email\");\n  const [email, setEmail] = useState(\"\");\n\n  const renderFunction = (renderComponent) => {\n    setRender(renderComponent);\n  };\n\n  const onSubmitHandlerEmail = async (email) => {\n    const obj = { email: email };\n    const res = await props.emailVerification(obj);\n    console.log(res);\n    if(res && res.status && res.status === 200)\n    {\n      renderFunction(\"otp\");\n    }\n  };\n\n  const onSubmitHandlerOTP = async (otp) => {\n    const obj = {\n      otp: otp * 1,\n    };\n    const res = await props.otpVerification(obj);\n    if(res && res.status && res.status === 200)\n    {\n      renderFunction(\"resetPassword\");\n    }\n  };\n\n  const onSubmitHandlerReset = async (password) => {\n    const obj = {\n      password: password,\n    };\n    const res = await props.resetPassword(obj);\n    return {status: res.status}\n  };\n\n  return (\n    <Aux>\n      <Breadcrumb />\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-content\">\n          <div className=\"auth-bg\">\n            <span className=\"r\" />\n            <span className=\"r s\" />\n            <span className=\"r s\" />\n            <span className=\"r\" />\n          </div>\n          {render === \"email\" ? (\n            <EmailValidation submitHandler={onSubmitHandlerEmail} />\n          ) : render === \"otp\" ? (\n            <OtpValidation submitHandler={onSubmitHandlerOTP} />\n          ) : (\n            render === \"resetPassword\" && (\n              <ResetValidation submitHandler={onSubmitHandlerReset} />\n            )\n          )}\n        </div>\n      </div>\n    </Aux>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    emailVerification: (data) => dispatch(forgetPasswordEmail(data)),\n    otpVerification: (data) => dispatch(forgetPasswordOtp(data)),\n    resetPassword: (data) => dispatch(resetForgetPassword(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}