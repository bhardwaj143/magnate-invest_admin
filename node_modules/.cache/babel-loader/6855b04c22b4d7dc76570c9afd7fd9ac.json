{"ast":null,"code":"import _regeneratorRuntime from \"/home/dml-sb/project/digi-react-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dml-sb/project/digi-react-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/dml-sb/project/digi-react-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dml-sb/project/digi-react-admin/src/component/User/UpdateUser/UpdateUser.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardBody, CardFooter, CardHeader, Button, Form, FormGroup, Label, Input, Spinner } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { updatingUser, gettingUser } from \"../../../redux/actions/userAction\";\nimport ModalSpinner from \"../../ReusableComponents/Loader/ModalSpinner/ModalSpinner\";\nimport ModifiedLoader from \"../../ReusableComponents/Loader/loader\";\nimport ToggleNotification from \"../../ReusableComponents/Toggle Notifications/ToggleNotification\";\nimport * as functions from \"../../../functions/function\";\nimport useQuery from \"../../ReusableComponents/customHooks/queryHook\";\n\nvar UpdateUser = function UpdateUser(props) {\n  var history = useHistory();\n  var query = useQuery();\n  var id = query.get(\"id\") || \"\";\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      fName = _useState2[0],\n      setFname = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lName = _useState4[0],\n      setLname = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fNameError = _useState8[0],\n      setFnameError = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      lNameError = _useState10[0],\n      setLnameError = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      emailError = _useState12[0],\n      setEmailError = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      saveLoader = _useState14[0],\n      setSaveLoader = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loader = _useState16[0],\n      setLoader = _useState16[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n  useEffect(function () {\n    if (props.user) {\n      setFname(props.user && props.user.fname ? props.user.fname : null);\n      setLname(props.user && props.user.lname ? props.user.lname : null);\n      setEmail(props.user && props.user.email ? props.user.email : null);\n    }\n  }, [props.user]);\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoader(true);\n              _context.next = 3;\n              return props.userDetail(id);\n\n            case 3:\n              setLoader(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var updateValidation = function updateValidation() {\n    setFnameError(\"\");\n    setLnameError(\"\");\n    setEmailError(\"\");\n    var err = false;\n    var firstNameValidation = functions.textValidation(fName, \"first name\");\n\n    if (firstNameValidation !== null) {\n      err = true;\n      setFnameError(firstNameValidation);\n      setSaveLoader(false);\n    }\n\n    var lastNameValidation = functions.textValidation(lName, \"last name\");\n\n    if (lastNameValidation !== null) {\n      err = true;\n      setLnameError(lastNameValidation);\n      setSaveLoader(false);\n    }\n\n    var emailValidation = functions.emailValidation(email);\n\n    if (emailValidation !== false) {\n      err = true;\n      setSaveLoader(false);\n      setEmailError(emailValidation);\n    }\n\n    return err;\n  };\n\n  var updateUserFunction = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var validate, obj, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setSaveLoader(true);\n              validate = updateValidation();\n\n              if (validate) {\n                _context2.next = 8;\n                break;\n              }\n\n              obj = {\n                first_name: fName,\n                last_name: lName,\n                email: email\n              };\n              _context2.next = 6;\n              return props.userUpdate(id, obj);\n\n            case 6:\n              res = _context2.sent;\n\n              if (res === 200) {\n                setSaveLoader(false);\n                history.push(\"/user/\".concat(id));\n                ToggleNotification(\"UpdateUserSuccess\"); // window.location.href = `/user/${id}`;\n              } else if (res && res.error === true) {\n                ToggleNotification(\"UpdateUserFail\");\n                setEmailError(res && res.message ? res.message : null);\n                setSaveLoader(false);\n              } else {\n                ToggleNotification(\"ServerError\");\n              }\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function updateUserFunction() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var saveButtonRender = function saveButtonRender() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: function onClick(e) {\n        return updateUserFunction();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Save Changes\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"danger\",\n      onClick: function onClick(e) {\n        return history.go(-1);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"Cancel\"));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"User Update\")), loader ? /*#__PURE__*/React.createElement(ModifiedLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ModalSpinner, {\n    data: saveLoader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"col-12 col-sm-4\",\n    value: fName,\n    onChange: function onChange(e) {\n      setFnameError(\"\");\n      setFname(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  })), fNameError ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, fNameError) : null, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"col-12 col-sm-4\",\n    value: lName,\n    onChange: function onChange(e) {\n      setLnameError(\"\");\n      setLname(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  })), lNameError ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, lNameError) : null, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, \"Email Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"col-12 col-sm-4\",\n    value: email,\n    onChange: function onChange(e) {\n      setEmailError(\"\");\n      setEmail(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  })), emailError ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, emailError) : null)), /*#__PURE__*/React.createElement(CardFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, saveButtonRender()))));\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    user: state.users.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    userDetail: function userDetail(id) {\n      return dispatch(gettingUser(id));\n    },\n    userUpdate: function userUpdate(id, data) {\n      return dispatch(updatingUser(id, data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateUser);","map":{"version":3,"sources":["/home/dml-sb/project/digi-react-admin/src/component/User/UpdateUser/UpdateUser.js"],"names":["React","useState","useEffect","Card","CardBody","CardFooter","CardHeader","Button","Form","FormGroup","Label","Input","Spinner","connect","useHistory","updatingUser","gettingUser","ModalSpinner","ModifiedLoader","ToggleNotification","functions","useQuery","UpdateUser","props","history","query","id","get","fName","setFname","lName","setLname","email","setEmail","fNameError","setFnameError","lNameError","setLnameError","emailError","setEmailError","saveLoader","setSaveLoader","loader","setLoader","getData","user","fname","lname","userDetail","updateValidation","err","firstNameValidation","textValidation","lastNameValidation","emailValidation","updateUserFunction","validate","obj","first_name","last_name","userUpdate","res","push","error","message","saveButtonRender","e","go","target","value","color","mapStateToProps","state","ownProps","users","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Spinner,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { updatingUser, gettingUser } from \"../../../redux/actions/userAction\";\nimport ModalSpinner from \"../../ReusableComponents/Loader/ModalSpinner/ModalSpinner\";\nimport ModifiedLoader from \"../../ReusableComponents/Loader/loader\";\nimport ToggleNotification from \"../../ReusableComponents/Toggle Notifications/ToggleNotification\";\nimport * as functions from \"../../../functions/function\";\nimport useQuery from \"../../ReusableComponents/customHooks/queryHook\";\n\nconst UpdateUser = (props) => {\n  const history = useHistory();\n\n  const query = useQuery();\n  const id = query.get(\"id\") || \"\";\n\n  const [fName, setFname] = useState(null);\n  const [lName, setLname] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [fNameError, setFnameError] = useState(\"\");\n  const [lNameError, setLnameError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [saveLoader, setSaveLoader] = useState(false);\n  const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (props.user) {\n      setFname(props.user && props.user.fname ? props.user.fname : null);\n      setLname(props.user && props.user.lname ? props.user.lname : null);\n      setEmail(props.user && props.user.email ? props.user.email : null);\n    }\n  }, [props.user]);\n\n  const getData = async () => {\n    setLoader(true);\n    await props.userDetail(id);\n    setLoader(false);\n  };\n\n  const updateValidation = () => {\n    setFnameError(\"\");\n    setLnameError(\"\");\n    setEmailError(\"\");\n    let err = false;\n    const firstNameValidation = functions.textValidation(fName, \"first name\");\n    if (firstNameValidation !== null) {\n      err = true;\n      setFnameError(firstNameValidation);\n      setSaveLoader(false);\n    }\n    const lastNameValidation = functions.textValidation(lName, \"last name\");\n    if (lastNameValidation !== null) {\n      err = true;\n      setLnameError(lastNameValidation);\n      setSaveLoader(false);\n    }\n    const emailValidation = functions.emailValidation(email);\n    if (emailValidation !== false) {\n      err = true;\n      setSaveLoader(false);\n      setEmailError(emailValidation);\n    }\n    return err;\n  };\n\n  const updateUserFunction = async () => {\n    setSaveLoader(true);\n    const validate = updateValidation();\n    if (!validate) {\n      const obj = {\n        first_name: fName,\n        last_name: lName,\n        email: email,\n      };\n      const res = await props.userUpdate(id, obj);\n      if (res === 200) {\n        setSaveLoader(false);\n        history.push(`/user/${id}`);\n        ToggleNotification(\"UpdateUserSuccess\");\n        // window.location.href = `/user/${id}`;\n      } else if (res && res.error === true) {\n        ToggleNotification(\"UpdateUserFail\");\n        setEmailError(res && res.message ? res.message : null);\n        setSaveLoader(false);\n      } else {\n        ToggleNotification(\"ServerError\");\n      }\n    }\n  };\n\n  const saveButtonRender = () => {\n    return (\n      <>\n        <Button\n          type=\"button\"\n          color=\"primary\"\n          onClick={(e) => updateUserFunction()}\n        >\n          Save Changes\n        </Button>\n        <Button type=\"button\" color=\"danger\" onClick={(e) => history.go(-1)}>\n          Cancel\n        </Button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <h3>User Update</h3>\n        </CardHeader>\n        {loader ? (\n          <ModifiedLoader />\n        ) : (\n          <>\n            <Form>\n              <CardBody>\n                <ModalSpinner data={saveLoader} />\n                <FormGroup>\n                  <Label>First Name</Label>\n                  <Input\n                    type=\"text\"\n                    className=\"col-12 col-sm-4\"\n                    value={fName}\n                    onChange={(e) => {\n                      setFnameError(\"\");\n                      setFname(e.target.value);\n                    }}\n                  />\n                </FormGroup>\n                {fNameError ? (\n                  <p style={{ color: \"red\" }}>{fNameError}</p>\n                ) : null}\n                <FormGroup>\n                  <Label>Last Name</Label>\n                  <Input\n                    type=\"text\"\n                    className=\"col-12 col-sm-4\"\n                    value={lName}\n                    onChange={(e) => {\n                      setLnameError(\"\");\n                      setLname(e.target.value);\n                    }}\n                  />\n                </FormGroup>\n                {lNameError ? (\n                  <p style={{ color: \"red\" }}>{lNameError}</p>\n                ) : null}\n                <FormGroup>\n                  <Label>Email Name</Label>\n                  <Input\n                    type=\"text\"\n                    className=\"col-12 col-sm-4\"\n                    value={email}\n                    onChange={(e) => {\n                      setEmailError(\"\");\n                      setEmail(e.target.value);\n                    }}\n                  />\n                </FormGroup>\n                {emailError ? (\n                  <p style={{ color: \"red\" }}>{emailError}</p>\n                ) : null}\n              </CardBody>\n            </Form>\n            <CardFooter>{saveButtonRender()}</CardFooter>\n          </>\n        )}\n      </Card>\n    </>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: state.users.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    userDetail: (id) => dispatch(gettingUser(id)),\n    userUpdate: (id, data) => dispatch(updatingUser(id, data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateUser);\n"]},"metadata":{},"sourceType":"module"}