{"ast":null,"code":"import _regeneratorRuntime from \"/home/dml-sb/project/digi-react-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dml-sb/project/digi-react-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/dml-sb/project/digi-react-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dml-sb/project/digi-react-admin/src/component/Authentication/ChangePassword/ChangePassword.js\";\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./ChangePassword.css\";\nimport { Card, CardHeader, CardBody, Form, FormGroup, Label, Input, Button, CardFooter, Modal, ModalBody, Spinner } from \"reactstrap\";\nimport Aux from \"../../../hoc/_Aux/index\";\nimport { connect } from \"react-redux\";\nimport { changingPassword } from \"../../../redux/actions/forgetPasswordAction\";\nimport ToggleNotification from \"../../ReusableComponents/Toggle Notifications/ToggleNotification\";\n\nvar ChangePassword = function ChangePassword(props) {\n  var history = useHistory();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      oldpassword = _useState2[0],\n      setOldPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordError = _useState8[0],\n      setPasswordError = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      oldpasswordError = _useState10[0],\n      setOldPasswordError = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      message = _useState12[0],\n      setmessageError = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      confirmPasswordError = _useState14[0],\n      setConfirmPasswordError = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loader = _useState16[0],\n      setLoader = _useState16[1];\n\n  var validation = function validation() {\n    setConfirmPasswordError(\"\");\n    setPasswordError(\"\");\n    var error = false;\n\n    if (!oldpassword) {\n      error = true;\n      setLoader(false);\n      setOldPasswordError(\"Please fill old password\");\n    }\n\n    if (!password) {\n      setLoader(false);\n      error = true;\n      setPasswordError(\"Please choose your password\");\n    } else if (password.length < 8) {\n      error = true;\n      setLoader(false);\n      setPasswordError(\"Password should have atleast 8 characters\");\n    } else if (!confirmPassword) {\n      error = true;\n      setLoader(false);\n      setConfirmPasswordError(\"Please confirm your password\");\n    } else if (confirmPassword !== password) {\n      error = true;\n      setLoader(false);\n      setConfirmPasswordError(\"The passwords does not match\");\n    }\n\n    return error;\n  };\n\n  var onSubmitHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var validate, obj, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoader(true);\n              validate = validation();\n\n              if (validate) {\n                _context.next = 9;\n                break;\n              }\n\n              obj = {\n                password: password,\n                oldpassword: oldpassword,\n                confirmPassword: confirmPassword\n              };\n              _context.next = 7;\n              return props.changePassword(obj);\n\n            case 7:\n              res = _context.sent;\n\n              if (res.status === 500) {\n                ToggleNotification(\"ServerError\");\n                setLoader(false);\n              } else if (res.error === true) {\n                setLoader(false);\n                setConfirmPasswordError(res.message);\n                ToggleNotification(\"ChangePasswordFail\");\n              } else {\n                ToggleNotification(\"ChangePasswordSuccess\");\n                history.push(\"/dashboard\");\n                setLoader(false);\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmitHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      textAlign: \"center\"\n    },\n    className: \"col-12 col-sm-6 m-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Change Password\")), /*#__PURE__*/React.createElement(Form, {\n    style: {\n      alignSelf: \"center\"\n    },\n    className: \"col-12 \",\n    onSubmit: function onSubmit(e) {\n      return onSubmitHandler(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Old Password\",\n    value: oldpassword,\n    disabled: loader,\n    className: \"col-12\",\n    onChange: function onChange(e) {\n      setOldPasswordError(\"\");\n      setOldPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })), oldpasswordError && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, oldpasswordError), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"New Password\",\n    value: password,\n    className: \"col-12\",\n    disabled: loader,\n    onChange: function onChange(e) {\n      setPasswordError(\"\");\n      setPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  })), passwordError && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, passwordError), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    value: confirmPassword,\n    disabled: loader,\n    className: \"col-12\",\n    onChange: function onChange(e) {\n      setConfirmPasswordError(\"\");\n      setConfirmPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  })), confirmPasswordError && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, confirmPasswordError)), /*#__PURE__*/React.createElement(CardFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    disabled: loader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, loader ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 27\n    }\n  }) : \"Change\"))))));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {\n  return {\n    changePassword: function changePassword(data) {\n      return dispatch(changingPassword(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ChangePassword);","map":{"version":3,"sources":["/home/dml-sb/project/digi-react-admin/src/component/Authentication/ChangePassword/ChangePassword.js"],"names":["React","useState","useHistory","Card","CardHeader","CardBody","Form","FormGroup","Label","Input","Button","CardFooter","Modal","ModalBody","Spinner","Aux","connect","changingPassword","ToggleNotification","ChangePassword","props","history","oldpassword","setOldPassword","password","setPassword","confirmPassword","setConfirmPassword","passwordError","setPasswordError","oldpasswordError","setOldPasswordError","message","setmessageError","confirmPasswordError","setConfirmPasswordError","loader","setLoader","validation","error","length","onSubmitHandler","e","preventDefault","validate","obj","changePassword","res","status","push","textAlign","alignSelf","target","value","color","mapDispatchToProps","dispatch","ownProps","data"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./ChangePassword.css\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  CardFooter,\n  Modal,\n  ModalBody,\n  Spinner,\n} from \"reactstrap\";\nimport Aux from \"../../../hoc/_Aux/index\";\nimport { connect } from \"react-redux\";\nimport { changingPassword } from \"../../../redux/actions/forgetPasswordAction\";\nimport ToggleNotification from \"../../ReusableComponents/Toggle Notifications/ToggleNotification\";\n\nconst ChangePassword = (props) => {\n  const history = useHistory();\n  const [oldpassword, setOldPassword] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [oldpasswordError, setOldPasswordError] = useState(\"\");\n  const [message, setmessageError] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n\n  const validation = () => {\n    setConfirmPasswordError(\"\");\n    setPasswordError(\"\");\n    let error = false;\n    if (!oldpassword) {\n      error = true;\n      setLoader(false);\n      setOldPasswordError(\"Please fill old password\");\n    }\n    if (!password) {\n      setLoader(false);\n      error = true;\n      setPasswordError(\"Please choose your password\");\n    } else if (password.length < 8) {\n      error = true;\n      setLoader(false);\n      setPasswordError(\"Password should have atleast 8 characters\");\n    } else if (!confirmPassword) {\n      error = true;\n      setLoader(false);\n      setConfirmPasswordError(\"Please confirm your password\");\n    } else if (confirmPassword !== password) {\n      error = true;\n      setLoader(false);\n      setConfirmPasswordError(\"The passwords does not match\");\n    }\n    return error;\n  };\n\n  const onSubmitHandler = async (e) => {\n    e.preventDefault();\n    setLoader(true);\n    const validate = validation();\n    if (!validate) {\n      const obj = {\n        password: password,\n        oldpassword: oldpassword,\n        confirmPassword: confirmPassword,\n      };\n      const res = await props.changePassword(obj);\n      if (res.status === 500) {\n        ToggleNotification(\"ServerError\");\n        setLoader(false);\n      } else if (res.error === true) {\n        setLoader(false);\n        setConfirmPasswordError(res.message);\n        ToggleNotification(\"ChangePasswordFail\");\n      } else {\n        ToggleNotification(\"ChangePasswordSuccess\");\n        history.push(\"/dashboard\");\n        setLoader(false);\n      }\n    }\n  };\n\n  return (\n    <Aux>\n      <div>\n        <Card\n          style={{ textAlign: \"center\" }}\n          className=\"col-12 col-sm-6 m-auto\"\n        >\n          <CardHeader>\n            <h4>Change Password</h4>\n          </CardHeader>\n          <Form\n            style={{ alignSelf: \"center\" }}\n            className=\"col-12 \"\n            onSubmit={(e) => onSubmitHandler(e)}\n          >\n            <CardBody>\n              <FormGroup>\n                <Input\n                  type=\"password\"\n                  placeholder=\"Old Password\"\n                  value={oldpassword}\n                  disabled={loader}\n                  className=\"col-12\"\n                  onChange={(e) => {\n                    setOldPasswordError(\"\");\n                    setOldPassword(e.target.value);\n                  }}\n                />\n              </FormGroup>\n              {oldpasswordError && (\n                <p style={{ color: \"red\" }}>{oldpasswordError}</p>\n              )}\n              <FormGroup>\n                <Input\n                  type=\"password\"\n                  placeholder=\"New Password\"\n                  value={password}\n                  className=\"col-12\"\n                  disabled={loader}\n                  onChange={(e) => {\n                    setPasswordError(\"\");\n                    setPassword(e.target.value);\n                  }}\n                />\n              </FormGroup>\n              {passwordError && <p style={{ color: \"red\" }}>{passwordError}</p>}\n              <FormGroup>\n                <Input\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  disabled={loader}\n                  className=\"col-12\"\n                  onChange={(e) => {\n                    setConfirmPasswordError(\"\");\n                    setConfirmPassword(e.target.value);\n                  }}\n                />\n              </FormGroup>\n              {confirmPasswordError && (\n                <p style={{ color: \"red\" }}>{confirmPasswordError}</p>\n              )}\n            </CardBody>\n            <CardFooter>\n              <Button type=\"submit\" color=\"primary\" disabled={loader}>\n                {loader ? <Spinner /> : \"Change\"}\n              </Button>\n            </CardFooter>\n          </Form>\n        </Card>\n      </div>\n    </Aux>\n  );\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    changePassword: (data) => dispatch(changingPassword(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}