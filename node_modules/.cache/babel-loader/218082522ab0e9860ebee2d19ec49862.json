{"ast":null,"code":"var _jsxFileName = \"/home/dml-sb/project/digi-react-admin/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap-social/bootstrap-social.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { NotificationContainer } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport App from \"./App/index\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer from \"./store/reducer\";\nimport config from \"./config\";\nimport \"./index.css\";\nimport Login from \"./redux/reducers/loginReducer\";\nimport Users from \"./redux/reducers/userDataReducer\";\nvar reducers = combineReducers({\n  reducer: reducer,\n  login: Login,\n  users: Users\n});\nvar store = createStore(reducers, applyMiddleware(thunk));\nvar app = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(NotificationContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(BrowserRouter, {\n  basename: config.basename,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }\n})));\nReactDOM.render(app, document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/dml-sb/project/digi-react-admin/src/index.js"],"names":["React","ReactDOM","thunk","combineReducers","createStore","applyMiddleware","Provider","BrowserRouter","NotificationContainer","App","serviceWorker","reducer","config","Login","Users","reducers","login","users","store","app","basename","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,sCAAP;AACA,OAAO,mCAAP;AACA,OAAO,uCAAP;AACA,OAAO,uCAAP;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,OAAO,2CAAP;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AAEA,IAAMC,QAAQ,GAAGZ,eAAe,CAAC;AAC/BQ,EAAAA,OAAO,EAAEA,OADsB;AAE/BK,EAAAA,KAAK,EAAEH,KAFwB;AAG/BI,EAAAA,KAAK,EAAEH;AAHwB,CAAD,CAAhC;AAMA,IAAMI,KAAK,GAAGd,WAAW,CAACW,QAAD,EAAWV,eAAe,CAACH,KAAD,CAA1B,CAAzB;AAEA,IAAMiB,GAAG,gBACP,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,aAAD;AAAe,EAAA,QAAQ,EAAEN,MAAM,CAACQ,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CAFF,CADF;AAUAnB,QAAQ,CAACoB,MAAT,CAAgBF,GAAhB,EAAqBG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB,E,CAEA;AACA;AACA;;AACAb,aAAa,CAACc,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap-social/bootstrap-social.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { NotificationContainer } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport App from \"./App/index\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer from \"./store/reducer\";\nimport config from \"./config\";\nimport \"./index.css\";\nimport Login from \"./redux/reducers/loginReducer\";\nimport Users from \"./redux/reducers/userDataReducer\";\n\nconst reducers = combineReducers({\n  reducer: reducer,\n  login: Login,\n  users: Users,\n});\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nconst app = (\n  <Provider store={store}>\n    <NotificationContainer />\n    <BrowserRouter basename={config.basename}>\n      {/* basename=\"/datta-able\" */}\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}