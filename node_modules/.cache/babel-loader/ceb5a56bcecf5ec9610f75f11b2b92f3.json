{"ast":null,"code":"import _regeneratorRuntime from \"/home/dml-sb/project/digi-react-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dml-sb/project/digi-react-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/dml-sb/project/digi-react-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dml-sb/project/digi-react-admin/src/component/ReusableComponents/ToggleButton/ToggleButton.js\";\n\nimport React, { useState } from \"react\";\nimport Switch from \"react-switch\";\nimport ToggleButtonModal from \"../CustomModal/ToggleButtonModal/ToggleButtonModal\";\nimport ToggleNotification from \"../Toggle Notifications/ToggleNotification\";\n\nvar ToggleButton = function ToggleButton(props) {\n  var _useState = useState(props.status === 0 ? false : props.status === 1 ? true : false),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openModal = _useState4[0],\n      setOpenModal = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loader = _useState6[0],\n      setLoader = _useState6[1];\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setOpenModal(true);\n  };\n\n  var modalHandler = function modalHandler() {\n    setOpenModal(!openModal);\n  };\n\n  var changeHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoader(true);\n              _context.next = 3;\n              return props.changeToggle();\n\n            case 3:\n              res = _context.sent;\n              setLoader(false);\n              modalHandler();\n\n              if (res) {\n                if (res === 200) {\n                  ToggleNotification(\"StatusChangeSuccess\");\n                  setChecked(!checked);\n                } else if (res === 500) {\n                  ToggleNotification(\"ServerError\");\n                }\n              } // const res = await props.changeToggle();\n              // setTimeout(() => {\n              //   setLoader(props.toggleLoader);\n              //   setChecked(!checked);\n              //   modalHandler();\n              //   ToggleNotification(\"StatusChangeSuccess\");\n              // }, 3000);\n\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function changeHandler() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var render = /*#__PURE__*/React.createElement(ToggleButtonModal, {\n    open: openModal,\n    name: props.name,\n    loading: loader,\n    changeHandler: changeHandler,\n    closeModal: modalHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, render, /*#__PURE__*/React.createElement(Switch, {\n    onChange: onChangeHandler,\n    checked: checked,\n    onColor: \"#86d3ff\",\n    onHandleColor: \"#2693e6\",\n    handleDiameter: 30,\n    uncheckedIcon: false,\n    checkedIcon: false,\n    boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n    activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n    height: 20,\n    width: 48,\n    className: \"react-switch\",\n    id: \"material-switch\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ToggleButton;","map":{"version":3,"sources":["/home/dml-sb/project/digi-react-admin/src/component/ReusableComponents/ToggleButton/ToggleButton.js"],"names":["React","useState","Switch","ToggleButtonModal","ToggleNotification","ToggleButton","props","status","checked","setChecked","openModal","setOpenModal","loader","setLoader","onChangeHandler","e","modalHandler","changeHandler","changeToggle","res","render","name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,iBAAP,MAA8B,oDAA9B;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,kBAA8BL,QAAQ,CACpCK,KAAK,CAACC,MAAN,KAAiB,CAAjB,GAAqB,KAArB,GAA6BD,KAAK,CAACC,MAAN,KAAiB,CAAjB,GAAqB,IAArB,GAA4B,KADrB,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAGA,mBAAkCR,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOS,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA4BV,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOW,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;AAC7BJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,MAAMK,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBL,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,MAAMO,aAAa;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBJ,cAAAA,SAAS,CAAC,IAAD,CAAT;AADoB;AAAA,qBAEFP,KAAK,CAACY,YAAN,EAFE;;AAAA;AAEdC,cAAAA,GAFc;AAGpBN,cAAAA,SAAS,CAAC,KAAD,CAAT;AACAG,cAAAA,YAAY;;AACZ,kBAAIG,GAAJ,EAAS;AACP,oBAAIA,GAAG,KAAK,GAAZ,EAAiB;AACff,kBAAAA,kBAAkB,CAAC,qBAAD,CAAlB;AACAK,kBAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,iBAHD,MAGO,IAAIW,GAAG,KAAK,GAAZ,EAAiB;AACtBf,kBAAAA,kBAAkB,CAAC,aAAD,CAAlB;AACD;AACF,eAZmB,CAapB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAnBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAba,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAsBA,MAAMG,MAAM,gBACV,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAEV,SADR;AAEE,IAAA,IAAI,EAAEJ,KAAK,CAACe,IAFd;AAGE,IAAA,OAAO,EAAET,MAHX;AAIE,IAAA,aAAa,EAAEK,aAJjB;AAKE,IAAA,UAAU,EAAED,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUA,sBACE,0CACGI,MADH,eAEE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAEN,eADZ;AAEE,IAAA,OAAO,EAAEN,OAFX;AAGE,IAAA,OAAO,EAAC,SAHV;AAIE,IAAA,aAAa,EAAC,SAJhB;AAKE,IAAA,cAAc,EAAE,EALlB;AAME,IAAA,aAAa,EAAE,KANjB;AAOE,IAAA,WAAW,EAAE,KAPf;AAQE,IAAA,SAAS,EAAC,gCARZ;AASE,IAAA,eAAe,EAAC,qCATlB;AAUE,IAAA,MAAM,EAAE,EAVV;AAWE,IAAA,KAAK,EAAE,EAXT;AAYE,IAAA,SAAS,EAAC,cAZZ;AAaE,IAAA,EAAE,EAAC,iBAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAoBD,CAnED;;AAqEA,eAAeH,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Switch from \"react-switch\";\nimport ToggleButtonModal from \"../CustomModal/ToggleButtonModal/ToggleButtonModal\";\nimport ToggleNotification from \"../Toggle Notifications/ToggleNotification\";\n\nconst ToggleButton = (props) => {\n  const [checked, setChecked] = useState(\n    props.status === 0 ? false : props.status === 1 ? true : false\n  );\n  const [openModal, setOpenModal] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const onChangeHandler = (e) => {\n    setOpenModal(true);\n  };\n\n  const modalHandler = () => {\n    setOpenModal(!openModal);\n  };\n\n  const changeHandler = async () => {\n    setLoader(true);\n    const res = await props.changeToggle();\n    setLoader(false);\n    modalHandler();\n    if (res) {\n      if (res === 200) {\n        ToggleNotification(\"StatusChangeSuccess\");\n        setChecked(!checked);\n      } else if (res === 500) {\n        ToggleNotification(\"ServerError\");\n      }\n    }\n    // const res = await props.changeToggle();\n    // setTimeout(() => {\n    //   setLoader(props.toggleLoader);\n    //   setChecked(!checked);\n    //   modalHandler();\n    //   ToggleNotification(\"StatusChangeSuccess\");\n    // }, 3000);\n  };\n\n  const render = (\n    <ToggleButtonModal\n      open={openModal}\n      name={props.name}\n      loading={loader}\n      changeHandler={changeHandler}\n      closeModal={modalHandler}\n    />\n  );\n\n  return (\n    <>\n      {render}\n      <Switch\n        onChange={onChangeHandler}\n        checked={checked}\n        onColor=\"#86d3ff\"\n        onHandleColor=\"#2693e6\"\n        handleDiameter={30}\n        uncheckedIcon={false}\n        checkedIcon={false}\n        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n        height={20}\n        width={48}\n        className=\"react-switch\"\n        id=\"material-switch\"\n      />\n    </>\n  );\n};\n\nexport default ToggleButton;\n"]},"metadata":{},"sourceType":"module"}