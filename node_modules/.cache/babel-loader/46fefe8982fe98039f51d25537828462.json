{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\src\\\\component\\\\Authentication\\\\ForgotPassword\\\\resetValidation\\\\ResetValidation.js\";\n\nimport React, { useState } from \"react\";\nimport { Form, FormGroup, Input, Button, Spinner } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport * as functions from \"../../../../functions/function\";\nimport ToggleNotification from \"../../../ReusableComponents/Toggle Notifications/ToggleNotification\";\nimport ErrorLine from \"../../../ReusableComponents/ErrorLine/ErrorLine\";\n\nvar ResetValidation = function ResetValidation(props) {\n  var history = useHistory();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmPassword = _useState4[0],\n      setConfirmPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordError = _useState6[0],\n      setPasswordError = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPasswordError = _useState8[0],\n      setConfirmPasswordError = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loader = _useState10[0],\n      setLoader = _useState10[1];\n\n  var resetValidation = function resetValidation() {\n    setConfirmPasswordError(\"\");\n    setPasswordError(\"\");\n    var err = false;\n    var resetPasswordValidation = functions.newPasswordValidation(password, confirmPassword);\n\n    if (resetPasswordValidation !== false) {\n      err = true;\n      setConfirmPasswordError(resetPasswordValidation);\n    }\n\n    return err;\n  };\n\n  var onSubmitHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var validation, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoader(true);\n              validation = resetValidation();\n\n              if (validation) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 6;\n              return props.submitHandler(password);\n\n            case 6:\n              res = _context.sent;\n\n              if (res.status === 500) {\n                ToggleNotification(\"ServerError\");\n              } else if (res.status === 400) {\n                setConfirmPasswordError(res.message);\n              } else if (res.status === 200) {\n                ToggleNotification(\"ForgetPasswordSuccess\");\n                history.replace(\"/auth/signin-1\");\n              }\n\n            case 8:\n              setLoader(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmitHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"feather icon-unlock auth-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"grey\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Enter New Password\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: function onSubmit(e) {\n      return onSubmitHandler(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    value: password,\n    placeholder: \"New Password\",\n    disabled: loader,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ErrorLine, {\n    error: passwordError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    disabled: loader,\n    value: confirmPassword,\n    placeholder: \"Confirm Password\",\n    onChange: function onChange(e) {\n      return setConfirmPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ErrorLine, {\n    error: confirmPasswordError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn shadow-2 mb-4\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: loader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, loader ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }) : \"Submit\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-2 text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Back to \", /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/auth/signin-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, \"Login \"))));\n};\n\nexport default ResetValidation;","map":{"version":3,"sources":["C:/Users/avi/Downloads/magnate-invest_admin/src/component/Authentication/ForgotPassword/resetValidation/ResetValidation.js"],"names":["React","useState","Form","FormGroup","Input","Button","Spinner","NavLink","useHistory","functions","ToggleNotification","ErrorLine","ResetValidation","props","history","password","setPassword","confirmPassword","setConfirmPassword","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","loader","setLoader","resetValidation","err","resetPasswordValidation","newPasswordValidation","onSubmitHandler","e","preventDefault","validation","submitHandler","res","status","message","replace","color","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, FormGroup, Input, Button, Spinner } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport * as functions from \"../../../../functions/function\";\nimport ToggleNotification from \"../../../ReusableComponents/Toggle Notifications/ToggleNotification\";\nimport ErrorLine from \"../../../ReusableComponents/ErrorLine/ErrorLine\";\n\nconst ResetValidation = (props) => {\n  const history = useHistory();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n\n  const resetValidation = () => {\n    setConfirmPasswordError(\"\");\n    setPasswordError(\"\");\n    let err = false;\n    const resetPasswordValidation = functions.newPasswordValidation(\n      password,\n      confirmPassword\n    );\n    if (resetPasswordValidation !== false) {\n      err = true;\n      setConfirmPasswordError(resetPasswordValidation);\n    }\n    return err;\n  };\n\n  const onSubmitHandler = async (e) => {\n    e.preventDefault();\n    setLoader(true);\n    const validation = resetValidation();\n    if (!validation) {\n      const res = await props.submitHandler(password);\n      if (res.status === 500) {\n        ToggleNotification(\"ServerError\");\n      } else if (res.status === 400) {\n        setConfirmPasswordError(res.message);\n      } else if (res.status === 200) {\n        ToggleNotification(\"ForgetPasswordSuccess\");\n        history.replace(\"/auth/signin-1\");\n      }\n    }\n    setLoader(false);\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body text-center\">\n        <div className=\"mb-4\">\n          <i className=\"feather icon-unlock auth-icon\" />\n        </div>\n        <h3 className=\"mb-4\">Reset Password</h3>\n        <p style={{ color: \"grey\" }}>Enter New Password</p>\n        <Form onSubmit={(e) => onSubmitHandler(e)}>\n          <FormGroup>\n            <Input\n              type=\"password\"\n              value={password}\n              placeholder=\"New Password\"\n              disabled={loader}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <ErrorLine error={passwordError} />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"password\"\n              disabled={loader}\n              value={confirmPassword}\n              placeholder=\"Confirm Password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n            <ErrorLine error={confirmPasswordError} />\n          </FormGroup>\n          <Button\n            className=\"btn shadow-2 mb-4\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={loader}\n          >\n            {loader ? <Spinner /> : \"Submit\"}\n          </Button>\n        </Form>\n        <p className=\"mb-2 text-muted\">\n          Back to <NavLink to=\"/auth/signin-1\">Login </NavLink>\n        </p>\n        {/* <p className=\"mb-0 text-muted\">Don’t have an account? <NavLink to=\"/auth/signup-1\">Signup</NavLink></p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default ResetValidation;\n"]},"metadata":{},"sourceType":"module"}