{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\src\\\\App\\\\layout\\\\AdminLayout\\\\index.js\";\nimport React, { Component, Suspense } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Fullscreen from \"react-full-screen\";\nimport windowSize from \"react-window-size\";\nimport Navigation from \"./Navigation\";\nimport NavBar from \"./NavBar\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport Loader from \"../Loader\";\nimport routes from \"../../../routes\";\nimport Aux from \"../../../hoc/_Aux\";\nimport * as actionTypes from \"../../../store/actions\";\nimport * as constants from \"../../../constants/appConstants\";\nimport \"./app.scss\";\n\nvar AdminLayout = /*#__PURE__*/function (_Component) {\n  _inherits(AdminLayout, _Component);\n\n  var _super = _createSuper(AdminLayout);\n\n  function AdminLayout() {\n    var _this;\n\n    _classCallCheck(this, AdminLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.fullScreenExitHandler = function () {\n      if (!document.fullscreenElement && !document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {\n        _this.props.onFullScreenExit();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AdminLayout, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.windowWidth > 992 && this.props.windowWidth <= 1024 && this.props.layout !== \"horizontal\") {\n        this.props.onComponentWillMount();\n      }\n    }\n  }, {\n    key: \"mobileOutClickHandler\",\n    value: function mobileOutClickHandler() {\n      if (this.props.windowWidth < 992 && this.props.collapseMenu) {\n        this.props.onComponentWillMount();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /* full screen exit call */\n      document.addEventListener(\"fullscreenchange\", this.fullScreenExitHandler);\n      document.addEventListener(\"webkitfullscreenchange\", this.fullScreenExitHandler);\n      document.addEventListener(\"mozfullscreenchange\", this.fullScreenExitHandler);\n      document.addEventListener(\"MSFullscreenChange\", this.fullScreenExitHandler);\n      var menu = routes.map(function (route, index) {\n        return route.component ? /*#__PURE__*/React.createElement(Route, {\n          key: index,\n          path: route.path,\n          exact: route.exact,\n          name: route.name,\n          render: function render(props) {\n            return /*#__PURE__*/React.createElement(route.component, Object.assign({}, props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 30\n              }\n            }));\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }\n        }) : null;\n      });\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Fullscreen, {\n        enabled: this.props.isFullScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navigation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pcoded-main-container\",\n        onClick: function onClick() {\n          return _this2.mobileOutClickHandler;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pcoded-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pcoded-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pcoded-inner-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Suspense, {\n        fallback: /*#__PURE__*/React.createElement(Loader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 43\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, constants.token ? menu : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/auth/signin-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Redirect, {\n        from: \"/\",\n        to: this.props.defaultPath,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 27\n        }\n      })))))))))));\n    }\n  }]);\n\n  return AdminLayout;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    defaultPath: state.reducer.defaultPath,\n    isFullScreen: state.reducer.isFullScreen,\n    collapseMenu: state.reducer.collapseMenu,\n    configBlock: state.reducer.configBlock,\n    layout: state.reducer.layout\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFullScreenExit: function onFullScreenExit() {\n      return dispatch({\n        type: actionTypes.FULL_SCREEN_EXIT\n      });\n    },\n    onComponentWillMount: function onComponentWillMount() {\n      return dispatch({\n        type: actionTypes.COLLAPSE_MENU\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(windowSize(AdminLayout));","map":{"version":3,"sources":["C:/Users/avi/Downloads/magnate-invest_admin/src/App/layout/AdminLayout/index.js"],"names":["React","Component","Suspense","Route","Switch","Redirect","connect","Fullscreen","windowSize","Navigation","NavBar","Breadcrumb","Loader","routes","Aux","actionTypes","constants","AdminLayout","fullScreenExitHandler","document","fullscreenElement","webkitIsFullScreen","mozFullScreen","msFullscreenElement","props","onFullScreenExit","windowWidth","layout","onComponentWillMount","collapseMenu","addEventListener","menu","map","route","index","component","path","exact","name","isFullScreen","mobileOutClickHandler","token","defaultPath","mapStateToProps","state","reducer","configBlock","mapDispatchToProps","dispatch","type","FULL_SCREEN_EXIT","COLLAPSE_MENU"],"mappings":"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","sourcesContent":["import React, { Component, Suspense } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Fullscreen from \"react-full-screen\";\nimport windowSize from \"react-window-size\";\n\nimport Navigation from \"./Navigation\";\nimport NavBar from \"./NavBar\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport Loader from \"../Loader\";\nimport routes from \"../../../routes\";\nimport Aux from \"../../../hoc/_Aux\";\nimport * as actionTypes from \"../../../store/actions\";\nimport * as constants from \"../../../constants/appConstants\";\n\nimport \"./app.scss\";\n\nclass AdminLayout extends Component {\n  fullScreenExitHandler = () => {\n    if (\n      !document.fullscreenElement &&\n      !document.webkitIsFullScreen &&\n      !document.mozFullScreen &&\n      !document.msFullscreenElement\n    ) {\n      this.props.onFullScreenExit();\n    }\n  };\n\n  componentWillMount() {\n    if (\n      this.props.windowWidth > 992 &&\n      this.props.windowWidth <= 1024 &&\n      this.props.layout !== \"horizontal\"\n    ) {\n      this.props.onComponentWillMount();\n    }\n  }\n\n  mobileOutClickHandler() {\n    if (this.props.windowWidth < 992 && this.props.collapseMenu) {\n      this.props.onComponentWillMount();\n    }\n  }\n\n  render() {\n    /* full screen exit call */\n    document.addEventListener(\"fullscreenchange\", this.fullScreenExitHandler);\n    document.addEventListener(\n      \"webkitfullscreenchange\",\n      this.fullScreenExitHandler\n    );\n    document.addEventListener(\n      \"mozfullscreenchange\",\n      this.fullScreenExitHandler\n    );\n    document.addEventListener(\"MSFullscreenChange\", this.fullScreenExitHandler);\n\n    const menu = routes.map((route, index) => {\n      return route.component ? (\n        <Route\n          key={index}\n          path={route.path}\n          exact={route.exact}\n          name={route.name}\n          render={(props) => <route.component {...props} />}\n        />\n      ) : null;\n    });\n\n    return (\n      <Aux>\n        <Fullscreen enabled={this.props.isFullScreen}>\n          <Navigation />\n          <NavBar />\n          <div\n            className=\"pcoded-main-container\"\n            onClick={() => this.mobileOutClickHandler}\n          >\n            <div className=\"pcoded-wrapper\">\n              <div className=\"pcoded-content\">\n                <div className=\"pcoded-inner-content\">\n                  <Breadcrumb />\n                  <div className=\"main-body\">\n                    <div className=\"page-wrapper\">\n                      <Suspense fallback={<Loader />}>\n                        <Switch>\n                          {constants.token ? (\n                            menu\n                          ) : (\n                            <Redirect to=\"/auth/signin-1\" />\n                          )}\n                          <Redirect from=\"/\" to={this.props.defaultPath} />\n                        </Switch>\n                      </Suspense>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Fullscreen>\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    defaultPath: state.reducer.defaultPath,\n    isFullScreen: state.reducer.isFullScreen,\n    collapseMenu: state.reducer.collapseMenu,\n    configBlock: state.reducer.configBlock,\n    layout: state.reducer.layout,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFullScreenExit: () => dispatch({ type: actionTypes.FULL_SCREEN_EXIT }),\n    onComponentWillMount: () => dispatch({ type: actionTypes.COLLAPSE_MENU }),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(windowSize(AdminLayout));\n"]},"metadata":{},"sourceType":"module"}