{"ast":null,"code":"import _regeneratorRuntime from \"/home/dml-sb/project/digi-react-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dml-sb/project/digi-react-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"../../instance\";\nimport * as url from \"../../constants/urlConstants\";\nimport ToggleNotification from \"../../component/ReusableComponents/Toggle Notifications/ToggleNotification\";\nexport var forgetPasswordEmail = function forgetPasswordEmail(data) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post(url.forgetPasswordEmail, data);\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status && res.status === 200) {\n                localStorage.setItem(\"keshavi-forgot-token-1\", res.data.data.token);\n              }\n\n              return _context.abrupt(\"return\", res);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              ToggleNotification('Error', _context.t0.response.data.message);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var forgetPasswordOtp = function forgetPasswordOtp(data) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post(url.forgetPasswordOtp, data);\n\n            case 3:\n              res = _context2.sent;\n\n              if (res.status && res.status === 200) {\n                localStorage.setItem(\"keshavi-forgot-token-2\", res.data.data.token);\n              }\n\n              return _context2.abrupt(\"return\", res);\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              ToggleNotification('Error', _context2.t0.response.data.message);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var resetForgetPassword = function resetForgetPassword(data) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.patch(url.resetForgetPassword, data);\n\n            case 3:\n              res = _context3.sent;\n\n              if (res.status && res.status === 200) {\n                localStorage.removeItem(\"keshavi-forgot-token-1\");\n                localStorage.removeItem(\"keshavi-forgot-token-2\");\n              }\n\n              return _context3.abrupt(\"return\", res);\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              ToggleNotification('Error', _context3.t0.response.data.message);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var changingPassword = function changingPassword(data) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.post(url.changingPassword, data);\n\n            case 3:\n              res = _context4.sent;\n              return _context4.abrupt(\"return\", res);\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/dml-sb/project/digi-react-admin/src/redux/actions/forgetPasswordAction.js"],"names":["axios","url","ToggleNotification","forgetPasswordEmail","data","dispatch","post","res","status","localStorage","setItem","token","response","message","forgetPasswordOtp","resetForgetPassword","patch","removeItem","changingPassword","console","log"],"mappings":"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","sourcesContent":["import axios from \"../../instance\";\nimport * as url from \"../../constants/urlConstants\";\nimport ToggleNotification from \"../../component/ReusableComponents/Toggle Notifications/ToggleNotification\";\n\nexport const forgetPasswordEmail = (data) => {\n  return async (dispatch) => {\n    try{\n      const res = await axios.post(url.forgetPasswordEmail, data);\n      if (res.status && res.status === 200) {\n        localStorage.setItem(\"keshavi-forgot-token-1\", res.data.data.token);\n      }\n      return res;\n    }\n    catch(err){\n      ToggleNotification('Error', err.response.data.message)\n    }\n  };\n};\n\nexport const forgetPasswordOtp = (data) => {\n  return async (dispatch) => {\n    try{\n      const res = await axios.post(url.forgetPasswordOtp, data);\n      if (res.status && res.status === 200) {\n        localStorage.setItem(\"keshavi-forgot-token-2\", res.data.data.token);\n      }\n      return res;\n    }\n    catch(err)\n    {\n      ToggleNotification('Error', err.response.data.message)\n    }\n  };\n};\n\nexport const resetForgetPassword = (data) => {\n  return async (dispatch) => {\n    try{\n      const res = await axios.patch(url.resetForgetPassword, data);\n      if (res.status && res.status === 200) {\n        localStorage.removeItem(\"keshavi-forgot-token-1\");\n        localStorage.removeItem(\"keshavi-forgot-token-2\");\n      }\n      return res;\n    }\n    catch(err)\n    {\n      ToggleNotification('Error', err.response.data.message)\n    }\n  };\n};\n\nexport const changingPassword = (data) => {\n  return async (dispatch) => {\n    try{\n      const res = await axios.post(url.changingPassword, data);\n      return res;\n    }\n    catch(err)\n    {\n      console.log(err)\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}