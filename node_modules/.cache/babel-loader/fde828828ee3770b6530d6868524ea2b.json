{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\avi\\\\Downloads\\\\magnate-invest_admin\\\\src\\\\component\\\\Maps\\\\GoogleMap\\\\index.js\";\nimport React from 'react';\nimport { Row, Col, Card, Form, InputGroup, Button } from 'react-bootstrap';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow, Polyline, Polygon } from 'google-maps-react';\nimport Aux from \"../../../hoc/_Aux\";\nvar polygon = [{\n  lat: 21.2105052,\n  lng: 72.8653491\n}, {\n  lat: 21.2206445,\n  lng: 72.8704506\n}, {\n  lat: 21.2183091,\n  lng: 72.8631228\n}];\n\nvar GoogleMap = /*#__PURE__*/function (_React$Component) {\n  _inherits(GoogleMap, _React$Component);\n\n  var _super = _createSuper(GoogleMap);\n\n  function GoogleMap() {\n    var _this;\n\n    _classCallCheck(this, GoogleMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      activeMarker: {},\n      selectedPlace: {},\n      showingInfoWindow: false,\n      position: null\n    };\n\n    _this.onMarkerClick = function (props, marker) {\n      return _this.setState({\n        activeMarker: marker,\n        selectedPlace: props,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onInfoWindowClose = function () {\n      return _this.setState({\n        activeMarker: null,\n        showingInfoWindow: false\n      });\n    };\n\n    _this.onMapClicked = function () {\n      if (_this.state.showingInfoWindow) _this.setState({\n        activeMarker: null,\n        showingInfoWindow: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderAutoComplete();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props !== prevProps.map) this.renderAutoComplete();\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n    }\n  }, {\n    key: \"renderAutoComplete\",\n    value: function renderAutoComplete() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          google = _this$props.google,\n          map = _this$props.map;\n      if (!google || !map) return;\n      var autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\n      autocomplete.bindTo('bounds', map);\n      autocomplete.addListener('place_changed', function () {\n        var place = autocomplete.getPlace();\n        if (!place.geometry) return;\n        if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);else {\n          map.setCenter(place.geometry.location);\n          map.setZoom(17);\n        }\n\n        _this2.setState({\n          position: place.geometry.location\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var position = this.state.position;\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, \"Basic\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '300px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Map, {\n        centerAroundCurrentLocation: true,\n        className: \"map\",\n        google: this.props.google,\n        zoom: 14,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, \"Simple Markers\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '300px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Map, {\n        centerAroundCurrentLocation: true,\n        google: this.props.google,\n        className: \"map\",\n        zoom: 13,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Marker, {\n        name: \"Codedthemes\",\n        position: {\n          lat: 21.2335163,\n          lng: 72.8643298\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Marker, {\n        name: \"Roman Point\",\n        position: {\n          lat: 21.2148165,\n          lng: 72.8627243\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Marker, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 41\n        }\n      })))))), /*#__PURE__*/React.createElement(Col, {\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }\n      }, \"Click-Able Markers\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '300px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Map, {\n        centerAroundCurrentLocation: true,\n        className: \"map\",\n        google: this.props.google,\n        onClick: this.onMapClicked,\n        zoom: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Marker, {\n        name: \"Codedthemes\",\n        position: {\n          lat: 21.2335163,\n          lng: 72.8643298\n        },\n        onClick: this.onMarkerClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Marker, {\n        name: \"Roman Point\",\n        position: {\n          lat: 21.2148165,\n          lng: 72.8627243\n        },\n        onClick: this.onMarkerClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Marker, {\n        name: \"Current Location\",\n        onClick: this.onMarkerClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        onClose: this.onInfoWindowClose,\n        visible: this.state.showingInfoWindow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 49\n        }\n      }, this.state.selectedPlace.name)))))))), /*#__PURE__*/React.createElement(Col, {\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 33\n        }\n      }, \"Geo-Coding\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        ref: function ref(_ref) {\n          return _this3.autocomplete = _ref;\n        },\n        type: \"text\",\n        placeholder: \"Search your favorite place\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 45\n        }\n      }, \"Search\")))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '240px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Map, Object.assign({\n        className: \"map\"\n      }, this.props, {\n        center: position,\n        centerAroundCurrentLocation: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(Marker, {\n        position: position,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 41\n        }\n      })))))), /*#__PURE__*/React.createElement(Col, {\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 33\n        }\n      }, \"Polygon\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '300px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Map, {\n        centerAroundCurrentLocation: true,\n        google: this.props.google,\n        className: \"map\",\n        zoom: 14,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Polygon, {\n        fillColor: \"#dc3545\",\n        fillOpacity: 0.35,\n        paths: [polygon],\n        strokeColor: \"#dc3545\",\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 41\n        }\n      })))))), /*#__PURE__*/React.createElement(Col, {\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 33\n        }\n      }, \"Polyline\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '300px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Map, {\n        centerAroundCurrentLocation: true,\n        google: this.props.google,\n        className: \"map\",\n        zoom: 14,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Polyline, {\n        fillColor: \"#dc3545\",\n        fillOpacity: 0.35,\n        path: polygon,\n        strokeColor: \"#dc3545\",\n        strokeOpacity: 0.8,\n        strokeWeight: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 41\n        }\n      }))))))));\n    }\n  }]);\n\n  return GoogleMap;\n}(React.Component);\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk'\n})(GoogleMap);","map":{"version":3,"sources":["C:/Users/avi/Downloads/magnate-invest_admin/src/component/Maps/GoogleMap/index.js"],"names":["React","Row","Col","Card","Form","InputGroup","Button","Map","Marker","GoogleApiWrapper","InfoWindow","Polyline","Polygon","Aux","polygon","lat","lng","GoogleMap","state","activeMarker","selectedPlace","showingInfoWindow","position","onMarkerClick","props","marker","setState","onInfoWindowClose","onMapClicked","renderAutoComplete","prevProps","map","e","preventDefault","google","autocomplete","maps","places","Autocomplete","bindTo","addListener","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","height","width","name","onSubmit","ref","Component","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Row, Col, Card, Form, InputGroup, Button} from 'react-bootstrap';\nimport {Map, Marker, GoogleApiWrapper, InfoWindow, Polyline, Polygon}  from 'google-maps-react';\n\nimport Aux from \"../../../hoc/_Aux\";\n\nconst polygon = [\n    { lat: 21.2105052, lng: 72.8653491 },\n    { lat: 21.2206445, lng: 72.8704506 },\n    { lat: 21.2183091, lng: 72.8631228 }\n];\n\nclass GoogleMap extends React.Component {\n\n    state = {\n        activeMarker: {},\n        selectedPlace: {},\n        showingInfoWindow: false,\n        position: null\n    };\n\n    onMarkerClick = (props, marker) =>\n        this.setState({\n            activeMarker: marker,\n            selectedPlace: props,\n            showingInfoWindow: true\n        });\n\n    onInfoWindowClose = () =>\n        this.setState({\n            activeMarker: null,\n            showingInfoWindow: false\n        });\n\n    onMapClicked = () => {\n        if (this.state.showingInfoWindow)\n            this.setState({\n                activeMarker: null,\n                showingInfoWindow: false\n            });\n    };\n\n    componentDidMount() {\n        this.renderAutoComplete();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props !== prevProps.map) this.renderAutoComplete();\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n    }\n\n    renderAutoComplete() {\n        const { google, map } = this.props;\n\n        if (!google || !map) return;\n\n        const autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\n        autocomplete.bindTo('bounds', map);\n\n        autocomplete.addListener('place_changed', () => {\n            const place = autocomplete.getPlace();\n\n            if (!place.geometry) return;\n\n            if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);\n            else {\n                map.setCenter(place.geometry.location);\n                map.setZoom(17);\n            }\n\n            this.setState({ position: place.geometry.location });\n        });\n    }\n\n\n    render() {\n        const { position } = this.state;\n\n        return (\n            <Aux>\n                <Row>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Basic</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        className=\"map\"\n                                        google={this.props.google}\n                                        zoom={14}\n                                    />\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Simple Markers</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        google={this.props.google}\n                                        className=\"map\"\n                                        zoom={13}>\n                                        <Marker\n                                            name=\"Codedthemes\"\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\n                                        />\n\n                                        <Marker\n                                            name=\"Roman Point\"\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\n                                        />\n\n                                        <Marker />\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Click-Able Markers</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        className=\"map\"\n                                        google={this.props.google}\n                                        onClick={this.onMapClicked}\n                                        zoom={12}>\n\n                                        <Marker\n                                            name=\"Codedthemes\"\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\n                                            onClick={this.onMarkerClick}\n                                        />\n\n                                        <Marker\n                                            name=\"Roman Point\"\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\n                                            onClick={this.onMarkerClick}\n                                        />\n\n                                        <Marker name=\"Current Location\" onClick={this.onMarkerClick} />\n\n                                        <InfoWindow\n                                            marker={this.state.activeMarker}\n                                            onClose={this.onInfoWindowClose}\n                                            visible={this.state.showingInfoWindow}>\n                                            <div>\n                                                <h3>{this.state.selectedPlace.name}</h3>\n                                            </div>\n                                        </InfoWindow>\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Geo-Coding</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <Form onSubmit={this.onSubmit}>\n                                    <InputGroup className=\"mb-3\">\n                                        <Form.Control ref={ref => (this.autocomplete = ref)} type='text' placeholder='Search your favorite place' />\n                                        <InputGroup.Append>\n                                            <Button type=\"submit\">Search</Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                </Form>\n                                <div style={{height: '240px', width: '100%'}}>\n                                    <Map\n                                        className='map'\n                                        {...this.props}\n                                        center={position}\n                                        centerAroundCurrentLocation >\n                                        <Marker position={position} />\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Polygon</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        google={this.props.google}\n                                        className=\"map\"\n                                        zoom={14}>\n                                        <Polygon\n                                            fillColor=\"#dc3545\"\n                                            fillOpacity={0.35}\n                                            paths={[polygon]}\n                                            strokeColor=\"#dc3545\"\n                                            strokeOpacity={0.8}\n                                            strokeWeight={2}\n                                        />\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Polyline</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        google={this.props.google}\n                                        className=\"map\"\n                                        zoom={14}>\n                                        <Polyline\n                                            fillColor=\"#dc3545\"\n                                            fillOpacity={0.35}\n                                            path={polygon}\n                                            strokeColor=\"#dc3545\"\n                                            strokeOpacity={0.8}\n                                            strokeWeight={5}\n                                        />\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk'\n})(GoogleMap);"]},"metadata":{},"sourceType":"module"}